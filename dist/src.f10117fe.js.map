{"version":3,"sources":["src/utils/constants.ts","src/hud/Cursor.ts","src/utils/colors.ts","src/hud/Box.ts","src/hud/DialogBox.ts","src/level/Tile.ts","src/level/Tilemap.ts","src/hud/InfoBox.ts","src/hud/Lifebar.ts","src/hud/HUD.ts","src/hud/HUDManager.ts","src/utils/directions.ts","src/utils/classConstants.ts","src/character/Character.ts","src/character/Player.ts","src/character/Wizard.ts","src/level/Battle.ts","src/level/Map.ts","src/level/Level.ts","src/animation/AnimationState.ts","src/animation/Animation.ts","src/level/LevelLoader.ts","src/core/AssetsLoader.ts","src/core/AssetsManager.ts","src/event/MouseEvents.ts","src/core/EventsManager.ts","src/core/GameAnimationState.ts","src/core/Renderer.ts","src/core/Game.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export const ASSETS_PATH = \"/assets\";\r\nexport const WINDOW_WIDTH = window.innerWidth;\r\nexport const WINDOW_HEIGHT = window.innerHeight;\r\nexport const SHRINK_FACTOR = 1.3;","import HUD from \"./HUD\";\r\n\r\nexport enum CursorState { ARROW, TARGET, ATTACK }\r\n\r\nexport default class Cursor {\r\n\r\n    private _hud: HUD;\r\n    public state: CursorState;\r\n\r\n    constructor(hud: HUD) {\r\n        this.state = CursorState.TARGET;\r\n        this._hud = hud;\r\n    }\r\n\r\n    getCursorSprite() {\r\n        switch (this.state) {\r\n            case CursorState.ARROW: return 'blackCursor';\r\n            case CursorState.TARGET: return 'cursor';\r\n            case CursorState.ATTACK: return 'sword2';\r\n        }\r\n    }\r\n\r\n    updateCoordinates(mouseX: number, mouseY: number) {\r\n        const infoBox = this._hud.infoBox;\r\n        if (mouseX > infoBox.x) {\r\n            if (this.state === CursorState.TARGET)\r\n                this.state = CursorState.ARROW;\r\n        }\r\n        else {\r\n            if (this.state === CursorState.ARROW)\r\n                this.state = CursorState.TARGET;\r\n        }\r\n    }\r\n\r\n    setState(state: CursorState) {\r\n        this.state = state;\r\n    }\r\n}","export enum Colors {\r\n    BLACK = \"#000000\",\r\n    RED = \"#FF0000\",\r\n    WHITE = \"#FFFFFF\",\r\n}\r\n","export default abstract class Box{\r\n    public x: number = 0;\r\n    public y: number = 0;\r\n    public w: number = 0;\r\n    public h: number = 0;\r\n    public isVisible : boolean;\r\n    public isAnimating : boolean;\r\n    constructor(){\r\n        this.isVisible = false\r\n        this.isAnimating = false\r\n    }\r\n\r\n    abstract draw(ctx:CanvasRenderingContext2D):void;\r\n\r\n}","import Game from \"../core/Game\";\r\nimport { Colors } from \"../utils/colors\";\r\nimport { WINDOW_HEIGHT, WINDOW_WIDTH } from \"../utils/constants\";\r\nimport Box from \"./Box\";\r\n\r\nexport default class DialogBox extends Box{\r\n\r\n    public currentLine:number;\r\n\r\n    public xLine1Reveal : number = 0;\r\n    public xLine2Reveal : number = 0;\r\n    public xLine3Reveal : number = 0;\r\n    public xLine4Reveal : number = 0;\r\n    \r\n    public isFadingIn : boolean = false;\r\n    private _textSource = \"\";\r\n    private _animationStart = 0;\r\n    private _animationTime = 2000;\r\n    private _textLine1 :string = \"\";\r\n    private _textLine2 :string = \"\";\r\n    private _textLine3 :string = \"\";\r\n    private _textLine4 :string = \"\";\r\n\r\n    private readonly _DIALOG_BOX_HEIGHT = 100;\r\n    private readonly _LINE_SEPARATOR = '/n';\r\n    private readonly _FONT = '14px Georgia';\r\n    private readonly _TEXT_HOR_OFFSET = 100;\r\n    private readonly _TEXT_VERT_OFFSET = 25;\r\n    private readonly _TEXT_LINE_SEPARATION = 20;\r\n    private readonly _DIALOGBOX_TIMEOUT = 2000;\r\n    private readonly _TEXT_SPEED = 12;\r\n    \r\n    constructor(game:Game){\r\n        super();\r\n        this.x = 0;\r\n        this.y = -this._DIALOG_BOX_HEIGHT;\r\n        this.w = WINDOW_WIDTH;\r\n        this.h = this._DIALOG_BOX_HEIGHT;\r\n        this.currentLine = 1;\r\n    }\r\n\r\n    animate(){\r\n        const animationSpeed = 10;\r\n        const ellapsedTime = window.performance.now() - this._animationStart;\r\n\r\n        if(ellapsedTime < this._animationTime / 2 ){\r\n            if(this.y < -10)\r\n                this.y += animationSpeed\r\n        }\r\n        else if(this.y > -this._DIALOG_BOX_HEIGHT){\r\n            this.y -= animationSpeed\r\n        }\r\n\r\n    }\r\n\r\n    draw(ctx:CanvasRenderingContext2D){\r\n\r\n        if(this.isAnimating){\r\n            this.animate();\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.fillStyle = Colors.BLACK;\r\n        ctx.globalAlpha = 0.7;\r\n        ctx.fillRect(this.x, this.y, this.w, this.h);\r\n\r\n        if (this.y < 0) this.y += 3;\r\n        \r\n        ctx.font = this._FONT;\r\n        ctx.globalAlpha = 1;\r\n        ctx.fillStyle = Colors.WHITE;\r\n\r\n        this.drawLines(ctx);\r\n        this.drawLineRevelation(ctx);\r\n\r\n        ctx.restore();\r\n    }\r\n\r\n    setTextSource(text:string){\r\n        this._textSource = text;\r\n        const [l1,l2,l3,l4] = this._textSource.split(this._LINE_SEPARATOR);\r\n        this._textLine1 = l1 ? l1 : \"\";       \r\n        this._textLine2 = l2 ? l2 : \"\";       \r\n        this._textLine3 = l3 ? l3 : \"\";       \r\n        this._textLine4 = l4 ? l4 : \"\";       \r\n        if(!this.isVisible){\r\n            this.revealDialogBox();\r\n        }\r\n    }\r\n\r\n    revealDialogBox(){\r\n        this.isVisible = true;\r\n        this.isAnimating = true;\r\n        this._animationStart = window.performance.now();\r\n        setTimeout(()=>{\r\n            this.reset();\r\n        },this._DIALOGBOX_TIMEOUT);\r\n    }\r\n\r\n    drawLines(ctx:CanvasRenderingContext2D){\r\n        ctx.fillText(this._textLine1, this.x + this._TEXT_HOR_OFFSET,this.y + this._TEXT_VERT_OFFSET + this._TEXT_LINE_SEPARATION * 0);       \r\n        ctx.fillText(this._textLine2, this.x + this._TEXT_HOR_OFFSET,this.y + this._TEXT_VERT_OFFSET + this._TEXT_LINE_SEPARATION * 1);       \r\n        ctx.fillText(this._textLine3, this.x + this._TEXT_HOR_OFFSET,this.y + this._TEXT_VERT_OFFSET + this._TEXT_LINE_SEPARATION * 2);       \r\n        ctx.fillText(this._textLine4, this.x + this._TEXT_HOR_OFFSET,this.y + this._TEXT_VERT_OFFSET + this._TEXT_LINE_SEPARATION * 3);       \r\n    }\r\n\r\n    drawLineRevelation(ctx:CanvasRenderingContext2D){\r\n        ctx.globalAlpha = 0.7;\r\n        ctx.fillStyle = Colors.BLACK;\r\n        ctx.fillRect(this.xLine1Reveal, this.y + 7, this.w, this.y + 14);\r\n        ctx.fillRect(this.xLine2Reveal, this.y + 28, this.w, this.y + 14);\r\n        ctx.fillRect(this.xLine3Reveal, this.y + 48, this.w, this.y + 14);\r\n        ctx.fillRect(this.xLine4Reveal, this.y + 68, this.w, this.y + 14);\r\n\r\n        if (this.currentLine === 1) {\r\n            this.xLine1Reveal += this._TEXT_SPEED;\r\n            if (this.xLine1Reveal >= this.w) this.currentLine++;\r\n        }\r\n        else if (this.currentLine === 2) {\r\n            this.xLine2Reveal += this._TEXT_SPEED;\r\n            if (this.xLine2Reveal >= this.w) this.currentLine++;\r\n        }\r\n        else if (this.currentLine === 3) {\r\n            this.xLine3Reveal += this._TEXT_SPEED;\r\n            if (this.xLine3Reveal >= this.w) this.currentLine++;\r\n        }\r\n        else if (this.currentLine === 4) {\r\n            this.xLine4Reveal += this._TEXT_SPEED;\r\n            if (this.xLine4Reveal >= this.w) this.currentLine++;\r\n        }\r\n\r\n        ctx.globalAlpha = 1;\r\n    }\r\n\r\n    reset(){\r\n        this._textLine1 = \"\";\r\n        this._textLine2 = \"\";\r\n        this._textLine3 = \"\";\r\n        this._textLine4 = \"\";\r\n        this.xLine1Reveal = 0;\r\n        this.xLine2Reveal = 0;\r\n        this.xLine3Reveal = 0;\r\n        this.xLine4Reveal = 0;\r\n        this.isVisible = false;\r\n        this.isAnimating = false;\r\n        this.y = -this._DIALOG_BOX_HEIGHT;\r\n        this._animationStart = 0;\r\n        this.currentLine = 1;\r\n    }\r\n    \r\n}","export default class Tile {\r\n\r\n    public x: number;\r\n    public y: number;\r\n    public w: number;\r\n    public h: number;\r\n\r\n    constructor(x: number, y: number, w: number, h: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h\r\n    }\r\n}","import Tile from \"./Tile\";\r\n\r\nconst Tilemap : any = {\r\n    floor: new Tile(0, 0, 16, 16),\r\n    grass1: new Tile(17, 0, 16, 16),\r\n    grass2: new Tile(34, 0, 16, 16),\r\n    grass3: new Tile(51, 0, 16, 16),\r\n    grass4: new Tile(68, 0, 16, 16),\r\n    grass5: new Tile(85, 0, 16, 16),\r\n    grass6: new Tile(102, 0, 16, 16),        \r\n    grass7: new Tile(119, 0, 16, 16),\r\n    player:new Tile(425, 0, 16, 16),\r\n    wizard:new Tile(408, 0, 16, 16),\r\n    cursor:new Tile(595, 204, 16, 16),\r\n    blackCursor : new Tile(612, 170, 16, 16),\r\n    bruxo: new Tile(0,373,256,256),\r\n    sword :new Tile(544,136,16,16),\r\n    sword2 :new Tile(544,119,16,16),\r\n    shield :new Tile(629,51,16,16),\r\n    potion :new Tile(544,221,16,16),\r\n    hourglass :new Tile(714,204,16,16),\r\n    torch :new Tile(714,51,16,16), \r\n    andre :new Tile(254,374,256,256), \r\n    galvao :new Tile(509,373,167,253),\r\n    frota :new Tile(0,629,278,341),\r\n    supla :new Tile(273,629,258,331),\r\n    theo :new Tile(530,628,258,286),\r\n\r\n}\r\n\r\nexport default Tilemap;","import Character from \"../character/Character\";\r\nimport Game from \"../core/Game\";\r\nimport Tilemap from \"../level/Tilemap\";\r\nimport { Colors } from \"../utils/colors\";\r\nimport { WINDOW_HEIGHT, WINDOW_WIDTH } from \"../utils/constants\";\r\nimport Box from \"./Box\";\r\nimport { CursorState } from \"./Cursor\";\r\n\r\nexport default class InfoBox extends Box {\r\n\r\n    private game: Game;\r\n    public readonly _INFO_BOX_HEIGHT: number = WINDOW_HEIGHT;\r\n    public readonly _INFO_BOX_WIDTH: number = 300;\r\n    private readonly _INFO_BOX_BACKGROUND_COLOR: string = Colors.WHITE;\r\n    private readonly _INFO_BOX_TEXT_COLOR: string = Colors.BLACK;\r\n    private readonly _INFO_BOX_ICONS_Y = 300;\r\n    private _INFO_BOX_ICONS_OFFSET: number = 30;\r\n    private readonly _INFO_BOX_ICON_WIDTH = 32;\r\n    private readonly _INFO_BOX_ICON_HEIGHT = 32;\r\n    private iconMapping : any = null;\r\n\r\n    constructor(game: Game) {\r\n        super();\r\n        this.x = WINDOW_WIDTH - this._INFO_BOX_WIDTH;\r\n        this.y = 0;\r\n        this.w = this._INFO_BOX_WIDTH;\r\n        this.h = this._INFO_BOX_HEIGHT\r\n        this.isVisible = true;\r\n        this.game = game;\r\n        this.iconMapping = {\r\n            attack: {\r\n                icon: 'sword',\r\n                callback: this.attack.bind(this)\r\n            },\r\n            defend: {\r\n                icon: 'shield',\r\n                callback: this.defend.bind(this)\r\n            },\r\n            item: {\r\n                icon: 'potion',\r\n                callback: this.item.bind(this)\r\n            },\r\n            wait: {\r\n                icon: 'hourglass',\r\n                callback: this.wait.bind(this)\r\n            },\r\n            run: {\r\n                icon: 'torch',\r\n                callback: this.torch.bind(this)\r\n            },\r\n        };\r\n    }\r\n\r\n    attack() {\r\n        this.game.hud.cursor.setState(CursorState.ATTACK);\r\n    }\r\n\r\n    defend() {\r\n        console.log('defend');\r\n    }\r\n\r\n    item() {\r\n        console.log('item');\r\n    }\r\n\r\n    wait() {\r\n        console.log('wait');\r\n    }\r\n\r\n    torch() {\r\n        console.log('torch');\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.save();\r\n        ctx.clearRect(this.x, this.y, this.w, this.h);\r\n        ctx.fillStyle = this._INFO_BOX_BACKGROUND_COLOR;\r\n        ctx.fillRect(this.x, this.y, this.w, this.h);\r\n        ctx.fillStyle = Colors.BLACK;\r\n        ctx.fillRect(this.x + 10, this.y, 2, this.h);\r\n        ctx.fillRect(this.x + 15, this.y, 2, this.h);\r\n        ctx.fillRect(this.x + 20, this.y, 2, this.h);\r\n        ctx.fillRect(WINDOW_WIDTH - 10, this.y, 2, this.h);\r\n        ctx.fillRect(WINDOW_WIDTH - 15, this.y, 2, this.h);\r\n        ctx.fillRect(WINDOW_WIDTH - 20, this.y, 2, this.h);\r\n        this.drawText(ctx);\r\n        this.drawIcons(ctx);\r\n        this.drawPicture(ctx);\r\n        ctx.restore();\r\n    }\r\n\r\n    drawText(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = this._INFO_BOX_TEXT_COLOR;\r\n        ctx.font = \"16px Georgia\";\r\n\r\n\r\n        const battle = this.game.currentLevel?.battle;\r\n        battle?.characterList.forEach((char: Character, index: number) => {\r\n            const offsetLeft = 40;\r\n            const offsetTop = 100;\r\n            const lineSeparation = 35;\r\n            ctx.fillText(\r\n                char.isActive ? \"-> \" + char.getCharacterClass() : \"\" + char.getCharacterClass(),\r\n                WINDOW_WIDTH - this._INFO_BOX_WIDTH + offsetLeft,\r\n                offsetTop + lineSeparation * index);\r\n        })\r\n    }\r\n\r\n    drawIcons(ctx: CanvasRenderingContext2D) {\r\n        const tileSet: HTMLImageElement = this.game.getRenderer().tileset;\r\n        const offsetX = this._INFO_BOX_ICONS_OFFSET;\r\n        const iconWidth = 32;\r\n        const iconHeight = 32;\r\n        const iconMargin = 20;\r\n        const iconNumber = 0;\r\n        for(const item in this.iconMapping){\r\n            const button = this.iconMapping[item];\r\n            const tile = Tilemap[button.icon];\r\n            const imageWidth = iconWidth;\r\n            const imageHeight = iconHeight;\r\n            const imagePosX = this.x + offsetX +  (iconNumber*(iconWidth + iconMargin));\r\n            const imagePosY = this._INFO_BOX_ICONS_Y;\r\n            ctx.drawImage(tileSet, tile.x, tile.y, tile.w, tile.h,\r\n                imagePosX, imagePosY,\r\n                imageWidth, imageHeight\r\n            );\r\n\r\n            iconNumber++;\r\n        }\r\n\r\n    }\r\n\r\n    drawPicture(ctx: CanvasRenderingContext2D) {\r\n\r\n        const battle = this.game.currentLevel?.battle;\r\n        const char = battle?.characterList.find((c:Character)=>c.isActive);\r\n\r\n        const tileSet: HTMLImageElement = this.game.getRenderer().tileset;\r\n        const tile = Tilemap[char?.picture];\r\n        const imageWidth = 256;\r\n        const imageHeight = 256;\r\n        const imagePosX = this.x + (this.w) / 2 - imageWidth / 2 + 1;\r\n        const imagePosY = (this.h) - imageHeight - 25;\r\n        ctx.drawImage(tileSet, tile.x, tile.y, tile.w, tile.h,\r\n            imagePosX, imagePosY,\r\n            imageWidth, imageHeight\r\n        );\r\n    }\r\n\r\n    clickHandler(x:number,y:number){\r\n        if(x > this.x && y > this._INFO_BOX_ICONS_Y && y < this._INFO_BOX_ICONS_Y + this._INFO_BOX_ICON_HEIGHT){\r\n            const click =  x - this.x  - this._INFO_BOX_ICONS_OFFSET;\r\n            const index = Math.floor(click/(32 + 20));\r\n            const item : any = Object.keys(this.iconMapping)[index > 0 ? index : 0];             \r\n            this.iconMapping[item].callback();\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import Game from \"../core/Game\";\r\n\r\nexport default class Lifebar{\r\n    constructor(game:Game){}\r\n}","import Game from \"../core/Game\";\r\nimport { WINDOW_HEIGHT, WINDOW_WIDTH } from \"../utils/constants\";\r\nimport Cursor from \"./Cursor\";\r\nimport DialogBox from \"./DialogBox\";\r\nimport InfoBox from \"./InfoBox\";\r\nimport Lifebar from \"./Lifebar\";\r\n\r\nexport default class HUD {\r\n\r\n    public x: number;\r\n    public y: number;\r\n    public w: number;\r\n    public h: number;\r\n    public lifebar: Lifebar;\r\n    public dialogBox: DialogBox;\r\n    public infoBox: InfoBox;\r\n    public cursor: Cursor;\r\n    private game: Game;\r\n\r\n\r\n    constructor(game: Game, x: number = 0, y: number = 0, w: number = WINDOW_WIDTH, h: number = 100) {\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n        this.lifebar = new Lifebar(this.game);\r\n        this.dialogBox = new DialogBox(this.game);\r\n        this.infoBox = new InfoBox(this.game);\r\n        this.cursor = new Cursor(this);\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n\r\n        if (this.dialogBox.isVisible)\r\n            this.dialogBox.draw(ctx);\r\n        if (this.infoBox.isVisible)\r\n            this.infoBox.draw(ctx);\r\n    }\r\n}","import HUD from \"./HUD\";\r\n\r\nexport default class HUDManager {\r\n\r\n    private static _hud: HUD;\r\n\r\n    public static setHUD(hud: HUD) {\r\n        this._hud = hud;\r\n    }\r\n\r\n    public static getHUDInstance(){\r\n        return this._hud;\r\n    }\r\n\r\n\r\n}","export enum Directions { UP, DOWN, LEFT, RIGHT , NONE };","export const CLASS_CHARACTER = \"Character\";\r\nexport const CLASS_HERO = \"Hero\";\r\nexport const CLASS_WIZARD = \"Wizard\";","import Map from \"../level/Map\";\r\nimport { Directions } from \"../utils/directions\";\r\nimport { CLASS_CHARACTER } from '../utils/classConstants';\r\n\r\nexport enum CharacterState { IDLE , START , MOVING , END_MOVE }\r\n\r\nexport default abstract class Character {\r\n\r\n    public x: number;\r\n    public y: number;\r\n    public vX: number = 0;\r\n    public vY: number = 0;\r\n    public uuid: string;\r\n    public isMoving: boolean;\r\n    public isCurrentTurn : boolean = false;\r\n    public isActive : boolean = false;\r\n    public currentMovingTargetY: number = 0;\r\n    public currentMovingTargetX: number = 0;\r\n    public state :CharacterState = CharacterState.IDLE;\r\n    public picture : string;\r\n    protected readonly _MOVE_TOWARDS_SPEED: number = 5;\r\n    protected currentPath: any[];\r\n    protected currentMap: Map;\r\n    protected class : string = CLASS_CHARACTER;\r\n\r\n    /*     public w: number;\r\n        public h: number; */\r\n    public tilemapEntry: string = \"floor\";\r\n\r\n    constructor(map: Map, x: number = 0, y: number = 0, isMoving = false /* , w: number = 0, h: number = 0 */) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.uuid = this.generateUUID();\r\n        this.isMoving = isMoving;\r\n        this.currentPath = [];\r\n        this.currentMap = map;\r\n\r\n        const fotos = ['bruxo','andre','galvao','frota','supla','theo'];\r\n        const index = Math.floor(Math.random()*(fotos.length));\r\n        this.picture = fotos[index];\r\n\r\n        /*         this.w = w;\r\n                this.h = h; */\r\n    }\r\n\r\n    public generateUUID(): string {\r\n        let sGuid = \"\";\r\n        for (let i = 0; i < 32; i++) {\r\n            sGuid += Math.floor(Math.random() * 0xF).toString(0xF);\r\n        }\r\n        return sGuid;\r\n    }\r\n    abstract setVelocity(direction?: Directions): void;\r\n\r\n    public move(): void {\r\n        if (this.isMoving) {\r\n            this.moveTowards();\r\n        }\r\n    }\r\n\r\n    protected moveTowards(/* x: number, y: number */): void {\r\n        if (this.currentPath.length > 0) {\r\n            this.state = CharacterState.MOVING;\r\n            const target = this.currentPath[0];\r\n            this.targetVelocity(target);\r\n\r\n            const xPosition = Math.floor(this.x / this.currentMap.levelTileWidth);\r\n            const yPosition = Math.floor(this.y / this.currentMap.levelTileHeight);\r\n\r\n            this.y += this.vY;\r\n            this.x += this.vX;\r\n\r\n            this.vX = 0;\r\n            this.vY = 0;\r\n\r\n            if (xPosition === target[0] && yPosition === target[1]) {\r\n                this.currentPath.shift();\r\n            }\r\n        }\r\n        else {\r\n            this.isMoving = false;\r\n            this.state = CharacterState.END_MOVE;\r\n        }\r\n    }\r\n\r\n    protected targetVelocity(target: any[]) {\r\n        switch (target[2]) {/* é a direção */\r\n            case Directions.UP: this.vY = -this._MOVE_TOWARDS_SPEED; break;\r\n            case Directions.DOWN: this.vY = +this._MOVE_TOWARDS_SPEED; break;\r\n            case Directions.LEFT: this.vX = -this._MOVE_TOWARDS_SPEED; break;\r\n            case Directions.RIGHT: this.vX = +this._MOVE_TOWARDS_SPEED; break;\r\n            case Directions.NONE: this.vX = 0; this.vY = 0; break;\r\n        }\r\n    }\r\n\r\n    protected calculatePath(map: Map) {\r\n\r\n        /* Limpando o caminho */\r\n        this.currentPath = [];\r\n\r\n        const targetCoords: [number, number] = [\r\n            Math.floor(this.currentMovingTargetX / map.levelTileWidth),\r\n            Math.floor(this.currentMovingTargetY / map.levelTileHeight)\r\n        ];\r\n\r\n        const playerCoords: [number, number] = [\r\n            Math.floor(this.x / map.levelTileWidth),\r\n            Math.floor(this.y / map.levelTileHeight)\r\n        ];\r\n\r\n        let currentTile: [number, number] = playerCoords;\r\n\r\n        /* \r\n        Vai caminhando conforme a diferença entre os eixos \r\n        Vai diminuindo a diferença a partir dos maiores\r\n        */\r\n        do {\r\n            const targetX = targetCoords[0];\r\n            const targetY = targetCoords[1];\r\n            const currentX = currentTile[0];\r\n            const currentY = currentTile[1];\r\n            const diffX = Math.abs(targetX - currentX);\r\n            const diffY = Math.abs(targetY - currentY);\r\n            let direction: Directions = Directions.NONE;\r\n\r\n            if (diffX > diffY) {\r\n                if (targetCoords[0] > currentTile[0]) {\r\n                    currentTile = [currentTile[0] + 1, currentTile[1]];\r\n                    direction = Directions.RIGHT;\r\n                }\r\n                else {\r\n                    currentTile = [currentTile[0] - 1, currentTile[1]];\r\n                    direction = Directions.LEFT;\r\n                }\r\n            }\r\n            else {\r\n                if (targetCoords[1] > currentTile[1]) {\r\n                    currentTile = [currentTile[0], currentTile[1] + 1];\r\n                    direction = Directions.DOWN;\r\n                }\r\n                else {\r\n                    currentTile = [currentTile[0], currentTile[1] - 1];\r\n                    direction = Directions.UP;\r\n                }\r\n            }\r\n\r\n            this.currentPath.push([currentTile[0], currentTile[1], direction]);\r\n\r\n        }\r\n        while (currentTile[0] !== targetCoords[0] || currentTile[1] !== targetCoords[1])\r\n\r\n    }\r\n\r\n    public startMovingTo(x: number, y: number, map: Map) {\r\n        this.state = CharacterState.MOVING;\r\n        this.isMoving = true;\r\n        this.currentMovingTargetX = x;\r\n        this.currentMovingTargetY = y;\r\n        this.calculatePath(map);\r\n    }\r\n\r\n    public getCharacterClass(){\r\n        return this.class;\r\n    }\r\n\r\n    abstract interaction(): void;\r\n\r\n}","import Level from \"../level/Level\";\r\nimport Map from \"../level/Map\";\r\nimport { CLASS_HERO } from \"../utils/classConstants\";\r\nimport { SHRINK_FACTOR, WINDOW_HEIGHT, WINDOW_WIDTH } from \"../utils/constants\";\r\nimport { Directions } from \"../utils/directions\";\r\nimport Character from \"./Character\";\r\n\r\nexport default class Player extends Character {\r\n\r\n    public static PLAYER_VELOCITY: number = 5;\r\n    public currentDirection: Directions;\r\n    public lastDirection: Directions;\r\n\r\n    constructor(map: Map) {\r\n        super(map);\r\n        this.currentDirection = Directions.NONE;\r\n        this.lastDirection = Directions.DOWN;\r\n        this.tilemapEntry = \"player\";\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.class = CLASS_HERO;\r\n        this.isCurrentTurn = true;\r\n    }\r\n\r\n    setVelocity(direction?: Directions): void {\r\n        this.currentDirection = direction as Directions;\r\n        if (direction !== Directions.NONE) {\r\n            this.lastDirection = direction as Directions;\r\n        }\r\n\r\n        switch (direction) {\r\n            case Directions.UP: this.vY = -Player.PLAYER_VELOCITY; break\r\n            case Directions.DOWN: this.vY = +Player.PLAYER_VELOCITY; break\r\n            case Directions.LEFT: this.vX = -Player.PLAYER_VELOCITY; break\r\n            case Directions.RIGHT: this.vX = +Player.PLAYER_VELOCITY; break\r\n            case Directions.NONE: this.vX = 0; this.vY = 0; break\r\n        }\r\n    }\r\n\r\n    checkCollision(level: Level) {\r\n        const objMatrix = level.map.objects;\r\n        const levelTileWidth = level.map.levelTileWidth;\r\n        const levelTileHeight = level.map.levelTileHeight;\r\n\r\n        const playerWidth = levelTileWidth / SHRINK_FACTOR;\r\n        const playerHeight = levelTileHeight / SHRINK_FACTOR;\r\n\r\n        const cXE = Math.floor((this.x + this.vX) / levelTileWidth);\r\n        const cXD = Math.floor((this.x + this.vX + playerWidth) / levelTileWidth);\r\n\r\n        const cYC = Math.floor((this.y + this.vY) / levelTileHeight);\r\n        const cYB = Math.floor((this.y + this.vY + playerHeight) / levelTileHeight);\r\n\r\n        if (cYC < 0 || cYC > level.map.height - 1) return true;\r\n\r\n        if (objMatrix[cYC][cXE] === 1) {\r\n            return false;\r\n        }\r\n        else if (objMatrix[cYC][cXD] === 1) {\r\n            return false;\r\n        }\r\n        else if (objMatrix[cYB][cXE] === 1) {\r\n            return false;\r\n        }\r\n        else if (objMatrix[cYB][cXD] === 1) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    checkBoundaries(level: Level): Directions {\r\n\r\n        const levelTileWidth = level.map.levelTileWidth;\r\n        const levelTileHeight = level.map.levelTileHeight;\r\n\r\n        const cX = Math.floor((this.x + this.vX + levelTileWidth / 2) / levelTileWidth);\r\n        const cY = Math.floor((this.y + this.vY + levelTileHeight / 2) / levelTileHeight);\r\n\r\n        if (cX < 0) {\r\n            this.x = WINDOW_WIDTH - levelTileWidth;\r\n            this.y = level.player.y;\r\n            return Directions.LEFT;\r\n        }\r\n        else if (cY < 0) {\r\n            this.y = WINDOW_HEIGHT - levelTileWidth;\r\n            return Directions.UP;\r\n        }\r\n        else if (cX > level.map.width) {\r\n            this.x = 0;\r\n            this.y = level.player.y;\r\n            return Directions.RIGHT;\r\n        }\r\n        else if (cY > level.map.height) {\r\n            this.y = 0;\r\n            return Directions.DOWN;\r\n        }\r\n        return Directions.NONE;\r\n    }\r\n\r\n    interaction(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n\r\n}","import HUDManager from \"../hud/HUDManager\";\r\nimport Map from \"../level/Map\";\r\nimport { CLASS_WIZARD } from \"../utils/classConstants\";\r\nimport { Directions } from \"../utils/directions\";\r\nimport Character from \"./Character\";\r\n\r\nexport default class Wizard extends Character {\r\n\r\n    private _speech:string;\r\n\r\n    constructor(map:Map,x: number = 0, y: number = 0, speech : string = \"\" /* , w: number = 0, h: number = 0 */) {\r\n        super(map,x, y);\r\n        this.tilemapEntry = \"wizard\";\r\n        this._speech = speech;\r\n        this.class = CLASS_WIZARD;\r\n\r\n    }\r\n\r\n    setVelocity(direction?: Directions): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    interaction(): void {\r\n        const hud = HUDManager.getHUDInstance();\r\n        hud.dialogBox.setTextSource(this._speech);\r\n    }\r\n}","import Character from \"../character/Character\";\r\n\r\nexport default class Battle {\r\n\r\n    public characterList: Character[];\r\n    public currentCharacter: Character;\r\n    public nextCharacter: Character;\r\n    public turnCount: number;\r\n\r\n    constructor(characterList: Character[]) {\r\n        this.characterList = characterList;\r\n        this.currentCharacter = characterList[0];\r\n        this.nextCharacter = characterList[1];\r\n        this.turnCount = 0;\r\n    }\r\n\r\n    updateBattle(){\r\n\r\n    }\r\n\r\n}","import Tilemap from '../level/Tilemap';\r\nimport { WINDOW_HEIGHT, WINDOW_WIDTH } from '../utils/constants';\r\n\r\nexport default class Map {\r\n\r\n    width: number;\r\n    height: number;\r\n    levelTileWidth: number;\r\n    levelTileHeight: number;\r\n    matrix: number[][];\r\n    objects: number[][];\r\n\r\n    constructor() {\r\n        this.width = 20;\r\n        this.height = 10;\r\n        this.levelTileWidth = Math.floor(WINDOW_WIDTH / this.width);\r\n        this.levelTileHeight = Math.floor(WINDOW_HEIGHT / this.height);\r\n        this.matrix = [];\r\n        this.objects = [];\r\n        this.initializeMap();\r\n    }\r\n\r\n    private initializeMap() {\r\n        this.initializeBackground();\r\n        this.initializeObjects();\r\n    }\r\n\r\n    /* TODO(tulio) - Passar tudo para uma operação só */\r\n    private initializeBackground() {\r\n        const TILE_LIMIT = 10; // para nao colidir com as fotos\r\n        const tilemapLength = Object.keys(Tilemap).length - 2;\r\n        for (let i = 0; i < this.height; i++) {\r\n            this.matrix.push([]);\r\n            for (let j = 0; j < this.width; j++) {\r\n                if (Math.random() < .1)\r\n                    this.matrix[i].push(Math.floor(Math.random() * (TILE_LIMIT)));\r\n            }\r\n        }\r\n    }\r\n\r\n    private initializeObjects() {\r\n        for (let i = 0; i < this.height; i++) {\r\n            this.objects.push([]);\r\n            for (let j = 0; j < this.width; j++) {\r\n                if (Math.random() < .01)\r\n                    this.objects[i].push(1);\r\n                else\r\n                    this.objects[i].push(0);\r\n            }\r\n        }\r\n    }\r\n}","import Character, { CharacterState } from \"../character/Character\";\r\nimport Player from \"../character/Player\";\r\nimport Wizard from \"../character/Wizard\";\r\nimport { WINDOW_HEIGHT, WINDOW_WIDTH } from \"../utils/constants\";\r\nimport { Directions } from \"../utils/directions\";\r\nimport Battle from \"./Battle\";\r\nimport Map from \"./Map\";\r\n\r\nexport enum LevelState { NPC_TURN, PLAYER_TURN }\r\n\r\nexport default class Level {\r\n\r\n    map: Map;\r\n    player: Player;\r\n    characters: Character[];\r\n    battle: Battle;\r\n    turnQueue: any[];\r\n    levelState: LevelState;\r\n    currentCharacterTurn: number;\r\n\r\n    constructor(player?: Player) {\r\n\r\n        this.map = new Map();\r\n        this.player = player ? player : new Player(this.map);\r\n        this.levelState = LevelState.NPC_TURN;\r\n\r\n        \r\n        const w1 = new Wizard(this.map, this.map.levelTileWidth * 2, this.map.levelTileHeight * 4, \"Hello my name is Wizard fer \");\r\n        const w2 = new Wizard(this.map, this.map.levelTileWidth * 7, this.map.levelTileHeight * 9, \"Ha toma no cu viado du carai!\");\r\n        \r\n        this.characters = [\r\n            w1,\r\n            w2,\r\n            this.player\r\n        ];\r\n        \r\n        this.turnQueue = this.calculateFirstTurn();\r\n        this.currentCharacterTurn = this.turnQueue.shift();\r\n\r\n\r\n        this.battle = new Battle(this.characters);\r\n\r\n    }\r\n\r\n    update() {\r\n\r\n        const currentCharacter = this.characters[this.currentCharacterTurn];\r\n\r\n        this.characters.forEach((c)=>c.isActive = false);\r\n        currentCharacter.isActive = true;\r\n\r\n        if (this.levelState === LevelState.NPC_TURN) {\r\n            \r\n            if (currentCharacter.state === CharacterState.MOVING) {\r\n                currentCharacter.move();\r\n            }\r\n            else if (currentCharacter.state === CharacterState.END_MOVE) {\r\n                this.currentCharacterTurn = this.turnQueue.shift();\r\n                const nextCharacter = this.characters[this.currentCharacterTurn];\r\n\r\n                if (nextCharacter instanceof Player) {\r\n                    this.levelState = LevelState.PLAYER_TURN;\r\n                }\r\n                else {\r\n                    this.levelState = LevelState.NPC_TURN;\r\n                }\r\n            }\r\n            else {\r\n\r\n                const matrixValueX = Math.floor((Math.random()* (this.player.x) / this.map.levelTileWidth));\r\n                const matrixValueY = Math.floor((Math.random()* (this.player.y) / this.map.levelTileHeight));\r\n\r\n                currentCharacter.startMovingTo(\r\n                    matrixValueX * this.map.levelTileWidth,\r\n                    matrixValueY * this.map.levelTileHeight,\r\n                    this.map);\r\n            }\r\n        }\r\n        else {\r\n            if (currentCharacter.state === CharacterState.MOVING) {\r\n                currentCharacter.move();\r\n            }\r\n            else if (currentCharacter.state === CharacterState.END_MOVE) {\r\n                this.turnQueue = this.calculateFirstTurn();\r\n                this.currentCharacterTurn = this.turnQueue.shift();\r\n                this.levelState = LevelState.NPC_TURN;\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateFirstTurn(): number[] {\r\n        this.characters.forEach((char:Character)=>char.state=CharacterState.IDLE);\r\n        return [0, 1, 2];\r\n    }\r\n\r\n    playerInteraction(): void {\r\n        switch (this.player.lastDirection) {\r\n            case Directions.DOWN: this.interact(this.player.x, (this.player.y + this.map.levelTileHeight) + this.map.levelTileHeight / 2); break;\r\n            case Directions.UP: this.interact(this.player.x, this.player.y - this.map.levelTileHeight / 2); break;\r\n            case Directions.LEFT: this.interact(this.player.x - this.map.levelTileWidth / 2, this.player.y); break;\r\n            case Directions.RIGHT: this.interact((this.player.x + this.map.levelTileWidth) + this.map.levelTileWidth / 2, this.player.y); break;\r\n        }\r\n\r\n    }\r\n\r\n    interact(x: number, y: number) {\r\n        this.characters.forEach((char: Character) => {\r\n            if (x >= char.x && x < char.x + this.map.levelTileWidth) {\r\n                if (y >= char.y && y < char.y + this.map.levelTileHeight) {\r\n                    char.interaction();\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    mouseInteraction(x: number, y: number) {\r\n\r\n        /* Cálculo repetido */\r\n        const matrixValueX = Math.floor(x / this.map.levelTileWidth);\r\n        const matrixValueY = Math.floor(y / this.map.levelTileHeight);\r\n\r\n        this.player.startMovingTo(\r\n            matrixValueX * this.map.levelTileWidth,\r\n            matrixValueY * this.map.levelTileHeight,\r\n            this.map);\r\n    }\r\n}","export default class AnimationState {\r\n\r\n    startTime : number = 0;\r\n    elapsedTime : number = 0;\r\n\r\n    constructor() {\r\n        this.startTime = window.performance.now();\r\n    }\r\n}","import Game, { GameStates } from \"../core/Game\";\r\nimport { Colors } from \"../utils/colors\";\r\nimport { WINDOW_HEIGHT, WINDOW_WIDTH } from \"../utils/constants\";\r\nimport AnimationState from \"./AnimationState\";\r\n\r\nexport default class Animation {\r\n\r\n    duration: number;\r\n    state: AnimationState;\r\n    game: Game;\r\n\r\n    constructor(game: Game, duration: number = 3000) {\r\n        this.game = game;\r\n        this.duration = duration;\r\n        this.state = new AnimationState();\r\n    }\r\n\r\n    update() {\r\n        this.state.elapsedTime = window.performance.now();\r\n        const deltaTime = this.state.elapsedTime - this.state.startTime;\r\n        if (deltaTime > this.duration)\r\n            this.finish();\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = Colors.RED;\r\n        const deltaTime = (this.state.elapsedTime - this.state.startTime)/this.duration;\r\n        const x = Math.sin(Math.PI * deltaTime) * WINDOW_WIDTH;\r\n        ctx.fillRect( 0 ,0,x,WINDOW_HEIGHT);\r\n    }\r\n\r\n    finish() {\r\n        /* Linkar Animacoes */\r\n        this.game.currentGameStates = this.game.currentGameStates.filter((state:GameStates)=>state === GameStates.RUNNING);\r\n    }\r\n\r\n}","import Animation from \"../animation/Animation\";\r\nimport Game, { GameStates } from \"../core/Game\";\r\nimport Level from \"./Level\";\r\n\r\nexport default class LevelLoader {\r\n    private _game: Game;\r\n    public isLoading = false;\r\n    public hasLoaded = true;\r\n    constructor(game: Game) {\r\n        this._game = game;\r\n    }\r\n\r\n    public loadLevel(newLevel?: Level) {\r\n\r\n        const animationTime = 2000;\r\n        this._game.currentAnimation = new Animation(this._game, animationTime);\r\n        this._game.currentGameStates = this._game.currentGameStates.filter((state: GameStates) => state !== GameStates.INTRO);\r\n        this._game.gameAnimationState.isTransition = true;\r\n        this._game.gameAnimationState.isIntro = false;\r\n        this._game.isPaused = true;\r\n        this._game.currentGameStates.push(GameStates.ANIMATING);\r\n        \r\n        setTimeout(() => {\r\n            this._game.gameAnimationState.isRunning = true;\r\n        }, animationTime/2);\r\n        setTimeout(() => {\r\n            /* Tirando o intro dos estados */\r\n            this._game.currentGameStates = this._game.currentGameStates.filter((state: GameStates) => state !== GameStates.INTRO);\r\n            this._game.gameAnimationState.isTransition = false;\r\n            this._game.isPaused = false;\r\n        }, animationTime);\r\n    }\r\n\r\n\r\n}","import { ASSETS_PATH } from \"../utils/constants\";\r\n\r\nexport default class AssetsLoader {\r\n    constructor() { }\r\n    loadAssets(): HTMLImageElement {\r\n        const img: HTMLImageElement = new Image();\r\n        img.src = `${ASSETS_PATH}/monochrome1.png`;\r\n        return img;\r\n    }\r\n}","export default class AssetsManager {\r\n\r\n    public static tileset: HTMLImageElement | null = null;\r\n\r\n}","import Game from \"../core/Game\";\r\nimport { CursorState } from \"../hud/Cursor\";\r\n\r\nexport default class MouseEvents {\r\n\r\n    static mouseX: number = -100;\r\n    static mouseY: number = -100;\r\n\r\n    game: Game;\r\n\r\n    constructor(game: Game) {\r\n        this.game = game;\r\n    }\r\n\r\n    init(): void {\r\n        window.onmousemove = this.updateMouseCoords.bind(this);\r\n        window.onclick = this.mouseClicked.bind(this)\r\n    }\r\n\r\n    private updateMouseCoords(e: MouseEvent): void {\r\n        MouseEvents.mouseX = e.x;\r\n        MouseEvents.mouseY = e.y;\r\n        this.game.hud.cursor.updateCoordinates(MouseEvents.mouseX, MouseEvents.mouseY);\r\n    }\r\n\r\n    /* Cursor state based click */\r\n    private mouseClicked(): void {\r\n\r\n        const cursor = this.game.hud.cursor;\r\n\r\n        switch (cursor.state) {\r\n            case CursorState.TARGET:\r\n                if (this.game.currentLevel)\r\n                    this.game.currentLevel.mouseInteraction(MouseEvents.mouseX, MouseEvents.mouseY);\r\n                break;\r\n            case CursorState.ARROW:\r\n                this.game.hud.infoBox.clickHandler(MouseEvents.mouseX, MouseEvents.mouseY);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    public static getMouseCoordinates() {\r\n        return [MouseEvents.mouseX, MouseEvents.mouseY];\r\n    }\r\n\r\n}","import Animation from \"../animation/Animation\";\r\nimport { Directions } from \"../utils/directions\";\r\nimport Game, { GameStates } from \"./Game\";\r\nimport MouseEvents from '../event/MouseEvents';\r\nimport Level from \"../level/Level\";\r\n\r\nexport default class EventsManager {\r\n    game: Game;\r\n\r\n    mouseEvent:MouseEvents;\r\n\r\n    constructor(game: Game) {\r\n        this.game = game;\r\n        this.mouseEvent = new MouseEvents(game);\r\n        this.initializeEvents();\r\n        /* First mouse event */\r\n        window.document.dispatchEvent(new Event(\"mousemove\"));\r\n    }\r\n\r\n    /* TODO(tulio) */\r\n    handleEvents(): never {\r\n        throw new Error(\"Not Implemented\");\r\n    }\r\n\r\n    initializeEvents() {\r\n        this.mouseEvent.init();        \r\n        window.onkeydown = (e: KeyboardEvent) => {\r\n            switch (e.key) {\r\n                case 'w': this.game.currentLevel?.player.setVelocity(Directions.UP); break;\r\n                case 's': this.game.currentLevel?.player.setVelocity(Directions.DOWN); break;\r\n                case 'a': this.game.currentLevel?.player.setVelocity(Directions.LEFT); break;\r\n                case 'd': this.game.currentLevel?.player.setVelocity(Directions.RIGHT); break;\r\n                case 'Control': this.game.currentLevel?.playerInteraction();break;\r\n                case 'Enter': {\r\n                    if (this.game.gameAnimationState.isIntro) {\r\n                        this.game.isPaused = false;\r\n                        this.game.gameAnimationState.isIntro = false;\r\n                    }\r\n                    break;\r\n                }\r\n                case 'Escape': {\r\n                    // if (this.game.currentGameState === GameStates.RUNNING) {\r\n                    //     this.game.currentGameState = GameStates.INTRO;\r\n                    // }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        window.onkeyup = (e: KeyboardEvent) => {\r\n            switch (e.key) {\r\n                case 'w':\r\n                case 's':\r\n                case 'a':\r\n                case 'd': this.game.currentLevel?.player.setVelocity(Directions.NONE); break;\r\n            }\r\n        }\r\n    }\r\n\r\n}","export default class GameAnimationState{\r\n\r\n    public isIntro : boolean; \r\n    public isTransition : boolean;\r\n    public isRunning: boolean;\r\n    public isDialog: boolean;\r\n\r\n    constructor(){\r\n        this.isIntro = false;\r\n        this.isTransition = false;\r\n        this.isRunning = true;\r\n        this.isDialog = false;\r\n    }\r\n\r\n}","import AssetsManager from \"./AssetsManager\";\r\nimport Tilemap from '../level/Tilemap';\r\nimport Level from \"../level/Level\";\r\nimport Tile from \"../level/Tile\";\r\nimport { WINDOW_HEIGHT, WINDOW_WIDTH, SHRINK_FACTOR } from \"../utils/constants\";\r\nimport Game, { GameStates } from \"./Game\";\r\nimport Animation from \"../animation/Animation\";\r\nimport { Colors } from \"../utils/colors\";\r\nimport Character from \"../character/Character\";\r\nimport EventsManager from \"./EventsManager\";\r\nimport MouseEvents from \"../event/MouseEvents\";\r\nimport HUDManager from \"../hud/HUDManager\";\r\nimport { CursorState } from \"../hud/Cursor\";\r\nexport default class Renderer {\r\n\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    tileset: HTMLImageElement;\r\n\r\n    introAlpha: number = 0.0;\r\n\r\n    static readonly CLEAR_COLOR = \"#000000\"\r\n\r\n    constructor() {\r\n        this.canvas = document.querySelector('canvas') as HTMLCanvasElement;\r\n        this.canvas.width = window.innerWidth;\r\n        this.canvas.height = window.innerHeight;\r\n        this.canvas.style.cursor = 'none';\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        this.ctx.imageSmoothingEnabled = false;\r\n        this.tileset = AssetsManager.tileset as HTMLImageElement;\r\n    }\r\n\r\n\r\n    setTileset(tileset: HTMLImageElement) {\r\n        this.tileset = tileset;\r\n    }\r\n\r\n    clear(): void {\r\n        this.ctx.fillStyle = \"#000000\";\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n\r\n    clearAux() {\r\n\r\n    }\r\n\r\n    drawIntro() {\r\n        this.clear();\r\n        this.ctx.fillStyle = Colors.WHITE;\r\n        this.ctx.save();\r\n\r\n        // if(this.introAlpha < 1.0)\r\n        this.introAlpha += .1;\r\n\r\n        this.ctx.globalAlpha = (this.introAlpha);\r\n\r\n        this.ctx.font = \"72px Georgia\";\r\n        this.ctx.fillText(\"Big smile!\", WINDOW_WIDTH / 2, WINDOW_HEIGHT / 2);\r\n    }\r\n\r\n    drawAnimation(game: Game) {\r\n        const animation: Animation = game.currentAnimation!;\r\n        animation.update();\r\n        animation.draw(this.ctx);\r\n    }\r\n\r\n    drawHUD(game: Game) {\r\n        game.hud.draw(this.ctx);\r\n    }\r\n\r\n    draw(game: Game, level: Level): void {\r\n        this.clear();\r\n        this.drawBackground(level);\r\n        this.drawObjects(level);\r\n        this.drawCharacters(level);\r\n        this.drawPlayer(level);\r\n        this.drawHUD(game);\r\n        this.drawCursor(level);\r\n\r\n    }\r\n\r\n    drawBackground(level: Level) {\r\n        const keyNames = Object.keys(Tilemap);\r\n        level.map.matrix.forEach((r, i) => {\r\n            r.forEach((c, j) => {\r\n                const prop: string = keyNames[c];\r\n                const tile: Tile = Tilemap[prop];\r\n                this.ctx.drawImage(this.tileset, tile.x, tile.y, tile.w, tile.h,\r\n                    level.map.levelTileWidth * j, level.map.levelTileHeight * i,\r\n                    level.map.levelTileWidth, level.map.levelTileHeight);\r\n            });\r\n        })\r\n\r\n\r\n    }\r\n\r\n    drawObjects(level: Level) {\r\n        level.map.objects.forEach((r, i) => {\r\n            r.forEach((c, j) => {\r\n                if (c === 1) {\r\n                    this.ctx.fillStyle = Colors.WHITE;\r\n                    this.ctx.fillRect(level.map.levelTileWidth * j, level.map.levelTileHeight * i,\r\n                        level.map.levelTileWidth, level.map.levelTileHeight);\r\n                    this.ctx.fillStyle = Colors.BLACK;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    drawCharacters(level: Level) {\r\n\r\n        level.characters.forEach((char: Character) => {\r\n            const tile: Tile = Tilemap[char.tilemapEntry];\r\n            this.ctx.fillRect(char.x, char.y,\r\n                level.map.levelTileWidth, level.map.levelTileHeight);\r\n\r\n            this.ctx.drawImage(this.tileset, tile.x, tile.y, tile.w, tile.h,\r\n                char.x, char.y,\r\n                level.map.levelTileWidth, level.map.levelTileHeight);\r\n        });\r\n    }\r\n\r\n    drawPlayer(level: Level) {\r\n        const shrinkFactor = 1.5;\r\n        const tile: Tile = Tilemap[level.player.tilemapEntry];\r\n        this.ctx.fillRect(level.player.x, level.player.y,\r\n            level.map.levelTileWidth / SHRINK_FACTOR, level.map.levelTileHeight / SHRINK_FACTOR);\r\n\r\n        this.ctx.drawImage(this.tileset, tile.x, tile.y, tile.w, tile.h,\r\n            level.player.x, level.player.y,\r\n            level.map.levelTileWidth / SHRINK_FACTOR, level.map.levelTileHeight / SHRINK_FACTOR);\r\n    }\r\n\r\n    drawCursor(level: Level) {\r\n\r\n        const cursor = HUDManager.getHUDInstance().cursor;\r\n        const tile: Tile = Tilemap[cursor.getCursorSprite()];\r\n\r\n        let [x, y] = MouseEvents.getMouseCoordinates();\r\n        \r\n        if (cursor.state === CursorState.TARGET || cursor.state === CursorState.ATTACK) {\r\n            x = Math.floor(x / level.map.levelTileWidth) * level.map.levelTileWidth;\r\n            y = Math.floor(y / level.map.levelTileHeight) * level.map.levelTileHeight;\r\n        }\r\n\r\n        this.ctx.drawImage(this.tileset, tile.x, tile.y, tile.w, tile.h,\r\n            x, y,\r\n            level.map.levelTileWidth, level.map.levelTileHeight);\r\n    }\r\n}","import Animation from '../animation/Animation';\r\nimport Character from '../character/Character';\r\nimport Player from '../character/Player';\r\nimport HUD from '../hud/HUD';\r\nimport HUDManager from '../hud/HUDManager';\r\nimport Level from '../level/Level';\r\nimport LevelLoader from '../level/LevelLoader';\r\nimport { Directions } from '../utils/directions';\r\nimport AssetsLoader from './AssetsLoader';\r\nimport AssetsManager from './AssetsManager';\r\nimport EventsManager from './EventsManager';\r\nimport GameAnimationState from './GameAnimationState';\r\nimport Renderer from './Renderer';\r\n\r\nexport enum GameStates { INTRO, PAUSED, RUNNING, ANIMATING };\r\n\r\nexport default class Game {\r\n\r\n    private _assetsLoader: AssetsLoader;\r\n    private _renderer: Renderer;\r\n    private _eventsManager: EventsManager\r\n    public hud: HUD;\r\n    public levelLoader: LevelLoader;\r\n    public currentGameStates: GameStates[];\r\n    public isRunning: boolean = true;\r\n    public isPaused: boolean = false; /* TODO(tulio) - tirar futuramente, por conta do carregamento duplo */\r\n    public gameAnimationState: GameAnimationState;\r\n    public currentLevel: Level | null = new Level();\r\n    public currentAnimation: Animation | null = null;\r\n\r\n    constructor() {\r\n        this._assetsLoader = new AssetsLoader();\r\n        this._renderer = new Renderer();\r\n        this._eventsManager = new EventsManager(this);\r\n        this.hud = new HUD(this);\r\n        this.levelLoader = new LevelLoader(this);\r\n        this.currentGameStates = [GameStates.INTRO];\r\n        this.gameAnimationState = new GameAnimationState();\r\n        this.initializeGame();\r\n    }\r\n\r\n    initializeGame() {\r\n        const tileset: HTMLImageElement = this._assetsLoader.loadAssets();\r\n        tileset.onload = () => {\r\n            AssetsManager.tileset = tileset;\r\n            this._renderer.setTileset(tileset);\r\n            this.isRunning = true;\r\n            requestAnimationFrame(this.run.bind(this));\r\n        }\r\n\r\n        HUDManager.setHUD(this.hud);\r\n    }\r\n\r\n    update() {\r\n        /* TODO(tulio) - Melhorar */\r\n        if (!this.isPaused) {\r\n            if (this.gameAnimationState.isIntro) {\r\n\r\n            }\r\n            else {\r\n                if (this.currentLevel?.player.checkCollision(this.currentLevel)) {\r\n                    if (this.currentLevel?.player.checkBoundaries(this.currentLevel) === Directions.NONE){\r\n                        this.currentLevel?.player.move();\r\n                    }\r\n                    else {\r\n                        this.levelLoader.loadLevel();\r\n                        this.currentLevel = new Level(this.currentLevel?.player);\r\n                    }\r\n                }\r\n\r\n                this.currentLevel?.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    draw() {\r\n\r\n        /* A ordem importa */\r\n        if (this.gameAnimationState.isIntro) {\r\n            this._renderer.drawIntro();\r\n        }\r\n\r\n        if (this.gameAnimationState.isRunning) {\r\n            this._renderer.draw(this, this.currentLevel as Level);\r\n        }\r\n\r\n        /* if (this.gameAnimationState.isDialog) { */\r\n            // this._renderer.drawHUD(this);\r\n        /* } */\r\n\r\n        if (this.gameAnimationState.isTransition) {\r\n            this._renderer.drawAnimation(this);\r\n        }\r\n\r\n    }\r\n\r\n    run() {\r\n        if (this.isRunning) {\r\n            this.update();\r\n            this.draw();\r\n            requestAnimationFrame(this.run.bind(this));\r\n        }\r\n    }\r\n\r\n    getRenderer(){\r\n        return this._renderer;\r\n    }\r\n}","// import '../typescript_notes/typescriptNotes';\r\n\r\nimport Game from './core/Game';\r\nnew Game();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}