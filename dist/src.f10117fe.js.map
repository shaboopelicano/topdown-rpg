{"version":3,"sources":["src/utils/constants.ts","src/utils/directions.ts","src/character/Character.ts","src/character/Player.ts","src/level/Tile.ts","src/level/Tilemap.ts","src/level/Map.ts","src/level/Level.ts","src/core/AssetsLoader.ts","src/core/AssetsManager.ts","src/core/EventsManager.ts","src/core/Renderer.ts","src/core/Game.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export const ASSETS_PATH = \"/assets\";\r\nexport const WINDOW_WIDTH = window.innerWidth;\r\nexport const WINDOW_HEIGHT = window.innerHeight;","export enum Directions { UP, DOWN, LEFT, RIGHT , NONE };","import { Directions } from \"../utils/directions\";\r\n\r\nexport default abstract class Character {\r\n\r\n    public x: number;\r\n    public y: number;\r\n    public vX: number = 0;\r\n    public vY: number = 0;\r\n    /*     public w: number;\r\n        public h: number; */\r\n    public tilemapEntry: string = \"floor\";\r\n\r\n    constructor(x: number = 0, y: number = 0/* , w: number = 0, h: number = 0 */) {\r\n        this.x = x;\r\n        this.y = y;\r\n        /*         this.w = w;\r\n                this.h = h; */\r\n    }\r\n\r\n    abstract setVelocity(direction?: Directions): void;\r\n    abstract move(): void;\r\n\r\n}","import Level from \"../level/Level\";\r\nimport { WINDOW_WIDTH } from \"../utils/constants\";\r\nimport { Directions } from \"../utils/directions\";\r\nimport Character from \"./Character\";\r\n\r\nexport default class Player extends Character {\r\n\r\n    public static PLAYER_VELOCITY: number = 5;\r\n    public currentDirection: Directions;\r\n\r\n    constructor() {\r\n        super();\r\n        this.currentDirection = Directions.NONE;\r\n        this.tilemapEntry = \"player\";\r\n    }\r\n\r\n    setVelocity(direction?: Directions): void {\r\n        this.currentDirection = direction as Directions;\r\n        switch (direction) {\r\n            case Directions.UP: this.vY = -Player.PLAYER_VELOCITY; break\r\n            case Directions.DOWN: this.vY = +Player.PLAYER_VELOCITY; break\r\n            case Directions.LEFT: this.vX = -Player.PLAYER_VELOCITY; break\r\n            case Directions.RIGHT: this.vX = +Player.PLAYER_VELOCITY; break\r\n            case Directions.NONE: this.vX = 0; this.vY = 0; break\r\n        }\r\n    }\r\n\r\n    checkCollision(level: Level) {\r\n        const objMatrix = level.map.objects;\r\n        const levelTileWidth = level.map.levelTileWidth;\r\n        const cX = Math.floor((this.x + this.vX + level.map.levelTileWidth / 2) / levelTileWidth);\r\n        const cY = Math.floor((this.y + this.vY + level.map.levelTileHeight / 2) / levelTileWidth);\r\n\r\n        if (objMatrix[cY][cX] === 1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    checkBoundaries(level: Level): Directions {\r\n        const levelTileWidth = level.map.levelTileWidth;\r\n        const cX = Math.floor((this.x + this.vX + level.map.levelTileWidth / 2) / levelTileWidth);\r\n        const cY = Math.floor((this.y + this.vY + level.map.levelTileHeight / 2) / levelTileWidth);\r\n        if (cX < 0) {\r\n            this.x = WINDOW_WIDTH - levelTileWidth;\r\n            return Directions.LEFT;\r\n        }\r\n        else if (cY < 0) { console.log('Up'); return Directions.UP; }\r\n        else if (cX > level.map.width) { console.log('RI'); return Directions.RIGHT; }\r\n        else if (cY > level.map.height) { console.log('RI'); return Directions.DOWN; }\r\n        return Directions.NONE;\r\n    }\r\n\r\n    move(): void {\r\n        this.x += this.vX;\r\n        this.y += this.vY;\r\n    }\r\n\r\n}","export default class Tile {\r\n\r\n    public x: number;\r\n    public y: number;\r\n    public w: number;\r\n    public h: number;\r\n\r\n    constructor(x: number, y: number, w: number, h: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h\r\n    }\r\n}","import Tile from \"./Tile\";\r\n\r\nconst Tilemap : any = {\r\n    floor: new Tile(0, 0, 16, 16),\r\n    grass1: new Tile(17, 0, 16, 16),\r\n    grass2: new Tile(34, 0, 16, 16),\r\n    grass3: new Tile(51, 0, 16, 16),\r\n    grass4: new Tile(68, 0, 16, 16),\r\n    grass5: new Tile(85, 0, 16, 16),\r\n    grass6: new Tile(102, 0, 16, 16),        \r\n    grass7: new Tile(119, 0, 16, 16),\r\n    player:new Tile(425, 0, 16, 16),\r\n}\r\n\r\nexport default Tilemap;","import Tilemap from '../level/Tilemap';\r\nimport { WINDOW_WIDTH } from '../utils/constants';\r\n\r\nexport default class Map {\r\n\r\n    width: number;\r\n    height: number;\r\n    levelTileWidth: number;\r\n    levelTileHeight: number;\r\n    matrix: number[][];\r\n    objects: number[][];\r\n\r\n    constructor() {\r\n        this.width = 20;\r\n        this.height = 20;\r\n        this.levelTileWidth = Math.floor(WINDOW_WIDTH / this.width);\r\n        this.levelTileHeight = Math.floor(WINDOW_WIDTH / this.height);\r\n        this.matrix = [];\r\n        this.objects = [];\r\n        this.initializeMap();\r\n    }\r\n\r\n    private initializeMap() {\r\n        this.initializeBackground();\r\n        this.initializeObjects();\r\n    }\r\n\r\n    /* TODO(tulio) - Passar tudo para uma operação só */\r\n    private initializeBackground() {\r\n        const tilemapLength = Object.keys(Tilemap).length;\r\n        for (let i = 0; i < this.height; i++) {\r\n            this.matrix.push([]);\r\n            for (let j = 0; j < this.width; j++) {\r\n                this.matrix[i].push(Math.floor(Math.random() * tilemapLength));\r\n            }\r\n        }\r\n    }\r\n\r\n    private initializeObjects() {\r\n        const tilemapLength = Object.keys(Tilemap).length;\r\n        for (let i = 0; i < this.height; i++) {\r\n            this.objects.push([]);\r\n            for (let j = 0; j < this.width; j++) {\r\n                if (Math.random() < .2)\r\n                    this.objects[i].push(1);\r\n                else\r\n                    this.objects[i].push(0);\r\n            }\r\n        }\r\n    }\r\n}","import Player from \"../character/Player\";\r\nimport Map from \"./Map\";\r\n\r\nexport default class Level {\r\n\r\n    map: Map;\r\n    player:Player;\r\n\r\n    constructor() {\r\n        this.map = new Map();\r\n        this.player = new Player();\r\n    }\r\n\r\n}","import { ASSETS_PATH } from \"../utils/constants\";\r\n\r\nexport default class AssetsLoader {\r\n    constructor() { }\r\n    \r\n    loadAssets(): HTMLImageElement {\r\n        const img: HTMLImageElement = new Image();\r\n        img.src = `${ASSETS_PATH}/monochrome1.png`;\r\n        return img;\r\n    }\r\n}","export default class AssetsManager {\r\n\r\n    public static tileset: HTMLImageElement | null = null;\r\n\r\n}","import { Directions } from \"../utils/directions\";\r\nimport Game, { GameStates } from \"./Game\";\r\n\r\nexport default class EventsManager {\r\n    game: Game;\r\n    constructor(game: Game) {\r\n        this.game = game;\r\n        this.initializeEvents();\r\n    }\r\n\r\n    initializeEvents() {\r\n        window.onkeydown = (e: KeyboardEvent) => {\r\n            switch (e.key) {\r\n                case 'w': this.game.currentLevel?.player.setVelocity(Directions.UP); break;\r\n                case 's': this.game.currentLevel?.player.setVelocity(Directions.DOWN); break;\r\n                case 'a': this.game.currentLevel?.player.setVelocity(Directions.LEFT); break;\r\n                case 'd': this.game.currentLevel?.player.setVelocity(Directions.RIGHT); break;\r\n                case 'Enter': {\r\n                    if (this.game.currentGameState === GameStates.INTRO){\r\n                        this.game.currentGameState = GameStates.RUNNING;\r\n                    }\r\n                    break;\r\n                }\r\n                case 'Escape': {\r\n                    if (this.game.currentGameState === GameStates.RUNNING){\r\n                        this.game.currentGameState = GameStates.INTRO;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        window.onkeyup = (e: KeyboardEvent) => {\r\n            switch (e.key) {\r\n                case 'w':\r\n                case 's':\r\n                case 'a':\r\n                case 'd': this.game.currentLevel?.player.setVelocity(Directions.NONE); break;\r\n            }\r\n        }\r\n    }\r\n\r\n}","import AssetsManager from \"./AssetsManager\";\r\nimport Tilemap from '../level/Tilemap';\r\nimport Level from \"../level/Level\";\r\nimport Tile from \"../level/Tile\";\r\nimport { WINDOW_HEIGHT, WINDOW_WIDTH } from \"../utils/constants\";\r\n\r\nexport default class Renderer {\r\n\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    tileset: HTMLImageElement;\r\n\r\n    constructor() {\r\n        this.canvas = document.querySelector('canvas') as HTMLCanvasElement;\r\n        this.canvas.width = window.innerWidth;\r\n        this.canvas.height = window.innerHeight;\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        this.tileset = AssetsManager.tileset as HTMLImageElement;\r\n    }\r\n\r\n    setTileset(tileset: HTMLImageElement) {\r\n        this.tileset = tileset;\r\n    }\r\n\r\n    clear(): void {\r\n        this.ctx.fillStyle = \"#000000\";\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n    \r\n    drawIntro(){\r\n        this.clear();\r\n        this.ctx.fillStyle = \"#FFFFFF\";\r\n        this.ctx.font = \"72px Georgia\";\r\n        this.ctx.fillText(\"Big smile!\", WINDOW_WIDTH/2, WINDOW_HEIGHT/2);\r\n    }\r\n\r\n    draw(level: Level): void {\r\n        this.clear();\r\n        this.drawBackground(level);\r\n        this.drawObjects(level);\r\n        this.drawCharacters();\r\n        this.drawPlayer(level);\r\n\r\n    }\r\n\r\n    drawBackground(level: Level) {\r\n        const keyNames = Object.keys(Tilemap);\r\n        level.map.matrix.forEach((r, i) => {\r\n            r.forEach((c, j) => {\r\n                const prop: string = keyNames[c];\r\n                const tile: Tile = Tilemap[prop];\r\n                this.ctx.drawImage(this.tileset, tile.x, tile.y, tile.w, tile.h,\r\n                    level.map.levelTileWidth * j, level.map.levelTileHeight * i,\r\n                    level.map.levelTileWidth, level.map.levelTileHeight);\r\n            });\r\n        })\r\n    }\r\n\r\n    drawObjects(level: Level) {\r\n        level.map.objects.forEach((r, i) => {\r\n            r.forEach((c, j) => {\r\n                if (c === 1) {\r\n                    this.ctx.fillStyle = \"#FFFFFF\";\r\n                    this.ctx.fillRect(level.map.levelTileWidth * j, level.map.levelTileHeight * i,\r\n                        level.map.levelTileWidth, level.map.levelTileHeight);\r\n                    this.ctx.fillStyle = \"#000000\";\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    drawCharacters() {\r\n\r\n    }\r\n\r\n    drawPlayer(level: Level) {\r\n        const tile: Tile = Tilemap[level.player.tilemapEntry];\r\n        this.ctx.fillRect(level.player.x, level.player.y,\r\n            level.map.levelTileWidth, level.map.levelTileHeight);\r\n\r\n        this.ctx.drawImage(this.tileset, tile.x, tile.y, tile.w, tile.h,\r\n            level.player.x, level.player.y,\r\n            level.map.levelTileWidth, level.map.levelTileHeight);\r\n    }\r\n}","import Level from '../level/Level';\r\nimport { Directions } from '../utils/directions';\r\nimport AssetsLoader from './AssetsLoader';\r\nimport AssetsManager from './AssetsManager';\r\nimport EventsManager from './EventsManager';\r\nimport Renderer from './Renderer';\r\n\r\nexport enum GameStates { INTRO, PAUSED, RUNNING, ANIMATING };\r\n\r\nexport default class Game {\r\n\r\n    private _assetsLoader: AssetsLoader;\r\n    private _renderer: Renderer;\r\n    private _eventsManager: EventsManager\r\n    public currentGameState: GameStates;\r\n    public isRunning: boolean = false;\r\n    public currentLevel: Level | null = null;\r\n\r\n    constructor() {\r\n        this._assetsLoader = new AssetsLoader();\r\n        this._renderer = new Renderer();\r\n        this._eventsManager = new EventsManager(this);\r\n        this.currentGameState = GameStates.INTRO;\r\n        this.initializeGame();\r\n    }\r\n\r\n    initializeGame() {\r\n        const tileset: HTMLImageElement = this._assetsLoader.loadAssets();\r\n        tileset.onload = () => {\r\n            AssetsManager.tileset = tileset;\r\n            this._renderer.setTileset(tileset);\r\n            this.isRunning = true;\r\n            this.currentLevel = new Level();\r\n            requestAnimationFrame(this.run.bind(this));\r\n        }\r\n    }\r\n\r\n    update() {\r\n        /* TODO(tulio) - Melhorar */\r\n        if (this.currentLevel?.player.checkCollision(this.currentLevel)) {\r\n            if (this.currentLevel?.player.checkBoundaries(this.currentLevel) === Directions.NONE)\r\n                this.currentLevel?.player.move();\r\n            else {\r\n                this.currentLevel = new Level();\r\n            }\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        switch (this.currentGameState) {\r\n            case GameStates.INTRO:\r\n                this._renderer.drawIntro(); break;\r\n            case GameStates.RUNNING:\r\n                this._renderer.draw(this.currentLevel as Level); break;\r\n        }\r\n    }\r\n\r\n    run() {\r\n        if (this.isRunning) {\r\n            this.update();\r\n            this.draw();\r\n            requestAnimationFrame(this.run.bind(this));\r\n        }\r\n    }\r\n}","import Game from './core/Game';\r\nnew Game();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}